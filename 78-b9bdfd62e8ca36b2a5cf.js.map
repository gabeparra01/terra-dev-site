{"version":3,"sources":["webpack:///./lib/terra-dev-site/test/relativeLink.test.mdx"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"+tBAOA,IAKMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,cAACH,EAAD,KAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,mBAAQ,CACN,GAAM,iBADR,iBAGA,2EACA,uBAAG,qBAAGC,WAAW,KAAQ,CACrB,KAAQ,2CADT,WAOPJ,EAAWK,gBAAiB","file":"78-b9bdfd62e8ca36b2a5cf.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"relative-link\"\n    }}>{`Relative link`}</h1>\n    <p>{`This link should work when deployed to gh-pages.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/terra-dev-site/test/terra-dev-site/md\"\n      }}>{`place`}</a></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}